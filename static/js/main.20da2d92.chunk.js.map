{"version":3,"sources":["components/MenuIcon.svg","components/BackButton.svg","components/Header.tsx","components/Menu.tsx","components/Loading.svg","components/Arrow.tsx","components/WindsAloft.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","location","useLocation","history","useHistory","pathname","to","src","MenuIcon","alt","className","onClick","goBack","BackButton","Settings","Arrow","dir","viewBox","height","width","cx","cy","r","fill","stroke","strokeWidth","d","transform","InitialLocation","latitude","longitude","WindsAloft","useState","setLocation","elevation","setElevation","forecastJSON","setForecastJSON","status","setStatus","setCoordinates","position","Number","coords","toFixed","useEffect","navigator","geolocation","getCurrentPosition","abortController","AbortController","a","queryStr","Object","entries","x","y","units","output","map","pair","join","url","fetch","signal","response","json","USGS_Elevation_Point_Query_Service","Elevation_Query","Elevation","console","error","name","fetchElevationData","abort","fetchWindsAloftData","id","soundings","sounding","i","altitude","feetAGL","windSpd","mph","windDir","temp","f","reverse","header","op40","Loader","App","path","Menu","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20da2d92.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/MenuIcon.5493e055.svg\";","export default __webpack_public_path__ + \"static/media/BackButton.93e6347d.svg\";","import MenuIcon from './MenuIcon.svg';\nimport BackButton from './BackButton.svg';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\n\nconst Header: React.FC = () => {\n  const location = useLocation();\n  const history = useHistory();\n  return (\n    <div>\n      {location.pathname === '/' ? (\n        <Link to=\"/menu\">\n          <img src={MenuIcon} alt=\"menu icon\" className=\"menu-icon\" />\n        </Link>\n      ) : (\n        <button onClick={() => history.goBack()}>\n          <img src={BackButton} alt=\"back button\" className=\"menu-icon\" />\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Header;\n","import { Link } from 'react-router-dom';\n\nconst Settings: React.FC = () => {\n  return (\n    <div className=\"Menu\">\n      <div>\n        <Link to=\"/about\">About</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n","export default __webpack_public_path__ + \"static/media/Loading.1831e8a7.svg\";","const Arrow: React.FC<{ dir: number }> = ({ dir }) => (\n  <svg viewBox=\"0 0 512 512\" height=\"2em\" width=\"2em\">\n    <circle\n      cx=\"256\"\n      cy=\"256\"\n      r=\"237.32505032019532\"\n      fill=\"hsl(210, 100%, 33%)\"\n      stroke=\"hsl(210, 100%, 66%)\"\n      strokeWidth=\"37.349899359609346\"\n    />\n    <path\n      d=\"\n        M 260.4 0\n        L 269.56814539771983 274.6749500197458\n        L 313.475583094649 335.1083534400135\n        L 256 512\n        L 198.52441690535102 335.1083534400135\n        L 242.43185460228014 274.6749500197458\n        L 251.6 0\n        Z\"\n      fill=\"hsl(30, 100%, 50%)\"\n      transform={`rotate(${dir}, 256, 256)`}\n    />\n  </svg>\n);\nexport default Arrow;\n","import React, { useState, useEffect } from 'react';\nimport Loader from './Loading.svg';\nimport Arrow from './Arrow';\n\nconst InitialLocation = {\n  latitude: 0,\n  longitude: 0,\n};\n\nconst WindsAloft: React.FC = () => {\n  const [location, setLocation] = useState(InitialLocation);\n  const [elevation, setElevation] = useState(0);\n  const [forecastJSON, setForecastJSON] = useState<WindsAloftData | null>(null);\n  const [status, setStatus] = useState('Loading...');\n\n  const setCoordinates = (position: GeolocationPosition) => {\n    setLocation({\n      latitude: Number(position.coords.latitude.toFixed(7)),\n      longitude: Number(position.coords.longitude.toFixed(7)),\n    });\n  };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(setCoordinates);\n  }, []);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const fetchElevationData = async (location: typeof InitialLocation) => {\n      if (elevation || !location.latitude) return;\n      try {\n        setStatus('Determining location elevation...');\n        const queryStr = Object.entries({\n          x: location.longitude,\n          y: location.latitude,\n          units: 'Meters',\n          output: 'json',\n        })\n          .map(pair => pair.join('='))\n          .join('&');\n        const url = `https://nationalmap.gov/epqs/pqs.php?${queryStr}`;\n        const response = await fetch(url, { signal: abortController.signal });\n        const json = await response.json();\n        setElevation(\n          json.USGS_Elevation_Point_Query_Service.Elevation_Query.Elevation\n        );\n        setStatus('');\n      } catch (e) {\n        console.error(e.name);\n      }\n    };\n    fetchElevationData(location);\n\n    return () => abortController.abort();\n  }, [location, elevation]);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const fetchWindsAloftData = async (\n      location: typeof InitialLocation,\n      elevation: number\n    ) => {\n      try {\n        if (forecastJSON || !elevation) return;\n        setStatus('Fetching winds aloft forecast data...');\n        const url = `https://weatherflow-dash.herokuapp.com/winds-aloft/${location.latitude}/${location.longitude}/${elevation}`;\n        const response = await fetch(url, { signal: abortController.signal });\n        const json = await response.json();\n        setForecastJSON(json);\n        setStatus('');\n      } catch (e) {\n        console.error(e.name);\n      }\n    };\n    fetchWindsAloftData(location, elevation);\n\n    return () => abortController.abort();\n  }, [location, elevation, forecastJSON]);\n\n  return forecastJSON ? (\n    <div id=\"winds-aloft-chart\">\n      {forecastJSON.soundings\n        .map((sounding, i) => (\n          <div className=\"sounding\" key={i}>\n            <div>{sounding.altitude.feetAGL} ft.</div>\n            <div>{sounding.windSpd.mph} mph</div>\n            <div>\n              <Arrow dir={sounding.windDir} />\n            </div>\n            <div>{sounding.windDir}°</div>\n            <div>{sounding.temp.f}°F</div>\n          </div>\n        ))\n        .reverse()}\n      <div className=\"footer\">\n        {forecastJSON.header}\n        <br />\n        {forecastJSON.op40}\n        <br />\n        Elevation: {forecastJSON.elevation}m MSL\n      </div>\n    </div>\n  ) : (\n    <div className=\"Loading-indicator\">\n      <h2>{status}</h2>\n      <img\n        src={Loader}\n        alt=\"Loading indicator\"\n        className=\"Loading-indicator-svg\"\n      />\n    </div>\n  );\n};\n\nexport default WindsAloft;\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Header';\nimport Menu from './components/Menu';\nimport WindsAloft from './components/WindsAloft';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"Header\">\n          <Header />\n        </div>\n        <div className=\"Main\">\n          <Switch>\n            <Route path=\"/about\">\n              <h1>About</h1>\n            </Route>\n            <Route path=\"/menu\">\n              <Menu />\n            </Route>\n            <Route path=\"/\">\n              <WindsAloft />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}